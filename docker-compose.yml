version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: test-project-postgres
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ./auth
    container_name: test-project-user-service
    env_file: .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "${SERVER_PORT_USER}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  notification-service:
    build: ./email
    container_name: test-project-notification-service
    env_file: .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "${SERVER_PORT_NOTIFICATION}:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge